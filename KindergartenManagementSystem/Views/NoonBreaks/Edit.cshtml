@model KindergartenManagementSystem.Models.NoonBreak

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

 

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>编辑午休信息</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreateTime)

    <div class="form-group">
        @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="Sex" class="form-control">
                @{
                    if (Model.Sex == "男")
                    {
                        <option selected="selected">男</option>
                        <option>女</option>
                    }
                    else
                    {
                        <option>男</option>
                        <option selected="selected">女</option>
                    }
                }

            </select>
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TeacherName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeacherName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeacherName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsHalfSleep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="IsHalfSleep" class="form-control">
                @{
                    if (Model.IsHalfSleep == "是")
                    {
                        <option selected="selected">是</option>
                        <option>否</option>
                    }
                    else
                    {
                        <option>是</option>
                        <option  selected="selected">否</option>
                    }
                }

            </select>
            @Html.ValidationMessageFor(model => model.IsHalfSleep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsSelfDress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="IsSelfDress" class="form-control">
                @{
                    if (Model.IsSelfDress == "是")
                    {
                        <option selected="selected">是</option>
                        <option>否</option>
                    }
                    else
                    {
                        <option>是</option>
                        <option selected="selected">否</option>
                    }
                }
                
            </select>

            @Html.ValidationMessageFor(model => model.IsSelfDress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsMakeBed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="IsMakeBed" class="form-control">
                @{
                    if (Model.IsMakeBed == "是")
                    {
                        <option selected="selected">是</option>
                        <option>否</option>
                    }
                    else
                    {
                        <option>是</option>
                        <option selected="selected">否</option>
                    }
                }
                
            </select>

            @Html.ValidationMessageFor(model => model.IsMakeBed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GetupInto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="GetupInto" class="form-control">
                @{
                    if (Model.GetupInto == "优")
                    {
                        <option selected="selected">优</option>
                        <option>良</option>
                        <option>差</option>
                    }
                    else if (Model.GetupInto == "良")
                    {
                        <option>优</option>
                        <option selected="selected">良</option>
                        <option>差</option>
                    }
                    else
                    {
                        <option>优</option>
                        <option>良</option>
                        <option  selected="selected">差</option>
                    }
                }

            </select>

            @Html.ValidationMessageFor(model => model.GetupInto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Healthy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="Healthy" class="form-control">
                @{
                    if (Model.Healthy == "健康")
                    {
                        <option selected="selected">健康</option>
                        <option>生病</option>
                    }
                    else
                    {
                        <option>健康</option>
                        <option selected="selected">生病</option>
                    }
                }

            </select>

            @Html.ValidationMessageFor(model => model.Healthy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abnormal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Abnormal, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Abnormal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalFen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalFen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalFen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="提交" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("返回管理列表", "Index")
</div>

 
